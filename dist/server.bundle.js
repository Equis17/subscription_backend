!function(e){var t={};function s(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=t,s.d=function(e,t,a){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)s.d(a,o,function(t){return e[t]}.bind(null,o));return a},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=32)}([function(e,t){e.exports=require("sequelize")},function(e,t){e.exports=require("lodash")},function(e,t,s){"use strict";s.d(t,"j",(function(){return i})),s.d(t,"k",(function(){return d})),s.d(t,"d",(function(){return l})),s.d(t,"p",(function(){return c})),s.d(t,"f",(function(){return n})),s.d(t,"q",(function(){return u})),s.d(t,"e",(function(){return g})),s.d(t,"n",(function(){return y})),s.d(t,"l",(function(){return p})),s.d(t,"b",(function(){return b})),s.d(t,"r",(function(){return h})),s.d(t,"i",(function(){return w})),s.d(t,"m",(function(){return N})),s.d(t,"c",(function(){return f})),s.d(t,"a",(function(){return k})),s.d(t,"o",(function(){return B}));var a=s(0),o=s.n(a),r=s(5);const i=r.a.define("role",{roleName:{type:o.a.STRING,allowNull:!1},toggle:{type:o.a.INTEGER,allowNull:!1}}),d=r.a.define("router",{routerName:{type:o.a.STRING,allowNull:!1},routerUrl:{type:o.a.STRING,allowNull:!1},toggle:{type:o.a.BOOLEAN,allowNull:!1}}),l=r.a.define("category",{roleId:{type:o.a.INTEGER,allowNull:!1},routerIds:{type:o.a.STRING,allowNull:!1}});l.belongsTo(i,{foreignKey:"roleId"});const c=r.a.define("sysManager",{roleId:{type:o.a.INTEGER,allowNull:!1},account:{type:o.a.STRING,allowNull:!1},password:{type:o.a.STRING,allowNull:!1},realName:{type:o.a.STRING,allowNull:!1},phoneNumber:{type:o.a.STRING,allowNull:!1},toggle:{type:o.a.INTEGER,allowNull:!1}});c.belongsTo(i,{foreignKey:"roleId"}),i.hasMany(c,{foreignKey:"roleId",target:"id"});const n=r.a.define("college",{collegeName:{type:o.a.STRING,allowNull:!1},toggle:{type:o.a.INTEGER,allowNull:!1}}),u=r.a.define("user",{roleId:{type:o.a.INTEGER,allowNull:!1},account:{type:o.a.STRING,allowNull:!1},realName:{type:o.a.STRING,allowNull:!1},phoneNumber:{type:o.a.STRING,allowNull:!1},password:{type:o.a.STRING,allowNull:!1},toggle:{type:o.a.INTEGER,allowNull:!1}});u.belongsTo(i,{foreignKey:"roleId"}),i.hasMany(u,{foreignKey:"roleId",target:"id"});const g=r.a.define("class",{collegeId:{type:o.a.INTEGER,allowNull:!1},className:{type:o.a.STRING,allowNull:!1},session:{type:o.a.STRING,allowNull:!1},toggle:{type:o.a.INTEGER,allowNull:!1}});g.belongsTo(n,{foreignKey:"collegeId"}),n.hasMany(g,{foreignKey:"collegeId",target:"id"});const y=r.a.define("stuClass",{classId:{type:o.a.INTEGER,allowNull:!1},userId:{type:o.a.INTEGER,allowNull:!1}});y.belongsTo(g,{foreignKey:"classId"}),y.belongsTo(u,{foreignKey:"userId"});const m=r.a.define("course",{userId:{type:o.a.INTEGER,allowNull:!1},collegeId:{type:o.a.INTEGER,allowNull:!1},courseName:{type:o.a.STRING,allowNull:!1},courseTime:{type:o.a.STRING,allowNull:!1},collegeIds:{type:o.a.STRING,allowNull:!1},sessions:{type:o.a.STRING,allowNull:!1}});m.belongsTo(u,{foreignKey:"userId"}),u.hasMany(m,{foreignKey:"userId",target:"id"}),m.belongsTo(n,{foreignKey:"collegeId"}),n.hasMany(m,{foreignKey:"collegeId",target:"id"});const p=r.a.define("seller",{sellerName:{type:o.a.STRING,allowNull:!1},roleId:{type:o.a.INTEGER,allowNull:!1},source:{type:o.a.STRING,allowNull:!1},phoneNumber:{type:o.a.STRING,allowNull:!1},password:{type:o.a.STRING,allowNull:!1},email:{type:o.a.STRING,allowNull:!1},address:{type:o.a.STRING,allowNull:!1},toggle:{type:o.a.INTEGER,allowNull:!1}});p.belongsTo(i,{foreignKey:"roleId"}),i.hasMany(p,{foreignKey:"roleId",target:"id"});const b=r.a.define("book",{bookName:{type:o.a.STRING,allowNull:!1},ISBN:{type:o.a.STRING,allowNull:!1},status:{type:o.a.INTEGER,allowNull:!1},toggle:{type:o.a.INTEGER,allowNull:!1}}),I=r.a.define("courseBook",{courseId:{type:o.a.INTEGER,allowNull:!1},bookId:{type:o.a.INTEGER,allowNull:!1},status:{type:o.a.INTEGER,allowNull:!1}});I.belongsTo(m,{foreignKey:"courseId"}),m.hasMany(I,{foreignKey:"courseId",target:"id"}),I.belongsTo(b,{foreignKey:"bookId"}),b.hasMany(I,{foreignKey:"bookId",target:"id"});const h=r.a.define("userBook",{userId:{type:o.a.INTEGER,allowNull:!1},bookId:{type:o.a.INTEGER,allowNull:!1},isPay:{type:o.a.BOOLEAN,allowNull:!1},subscriptionId:{type:o.a.INTEGER,allowNull:!1}});h.belongsTo(u,{foreignKey:"userId"}),u.hasMany(h,{foreignKey:"userId",target:"id"}),h.belongsTo(b,{foreignKey:"bookId"}),b.hasMany(h,{foreignKey:"bookId",target:"id"});const w=r.a.define("quote",{bookId:{type:o.a.INTEGER,allowNull:!1},sellerId:{type:o.a.INTEGER,allowNull:!1},subscriptionId:{type:o.a.INTEGER,allowNull:!1},price:{type:o.a.STRING,allowNull:!1},time:{type:o.a.DATE,allowNull:!1},status:{type:o.a.INTEGER,allowNull:!1}});w.belongsTo(b,{foreignKey:"bookId"}),b.hasMany(w,{foreignKey:"bookId",target:"id"}),w.belongsTo(p,{foreignKey:"sellerId"}),p.hasMany(w,{foreignKey:"sellerId",target:"id"});const N=r.a.define("sellerOrder",{quoteId:{type:o.a.INTEGER,allowNull:!1},time:{type:o.a.DATE,allowNull:!1},status:{type:o.a.INTEGER,allowNull:!1}});N.belongsTo(w,{foreignKey:"quoteId"}),w.hasMany(N,{foreignKey:"quoteId",target:"id"});const f=r.a.define("bookList",{bookListName:{type:o.a.STRING,allowNull:!1},collegeId:{type:o.a.INTEGER,allowNull:!1},toggle:{type:o.a.INTEGER,allowNull:!1},bookIds:{type:o.a.STRING,allowNull:!1},classIds:{type:o.a.STRING,allowNull:!1}});f.belongsTo(n,{foreignKey:"collegeId"});const k=r.a.define("assign",{userId:{type:o.a.INTEGER,allowNull:!1},classId:{type:o.a.INTEGER,allowNull:!1},status:{type:o.a.INTEGER,allowNull:!1},assignId:{type:o.a.INTEGER,allowNull:!1}});k.belongsTo(g,{foreignKey:"classId"}),k.belongsTo(u,{foreignKey:"userId"}),u.hasMany(k,{foreignKey:"assignId",target:"id"});const B=r.a.define("subscription",{subscriptionName:{type:o.a.STRING,allowNull:!1},status:{type:o.a.INTEGER,allowNull:!1}});w.belongsTo(B,{foreignKey:"subscriptionId"}),B.hasMany(w,{foreignKey:"subscriptionId",target:"id"}),f.belongsTo(B,{foreignKey:"subscriptionId"}),B.hasMany(f,{foreignKey:"subscriptionId",target:"id"}),h.belongsTo(B,{foreignKey:"subscriptionId"}),B.hasMany(h,{foreignKey:"subscriptionId",target:"id"})},function(e,t){e.exports=require("jwt-decode")},function(e,t){e.exports=require("koa-router")},function(e,t,s){"use strict";s.d(t,"a",(function(){return d}));var a=s(0),o=s.n(a),r=s(8);const i={host:r.a.host,dialect:"mysql",define:{charset:"utf8",dialectOptions:{collate:"utf8_general_ci"},timestamps:!0},timezone:"+08:00",pool:{max:10,min:0,idle:1e4}},d=new o.a(r.a.database,r.a.user,r.a.password,i)},function(e,t,s){"use strict";var a=s(2),o=s(1),r=s.n(o),i=s(0),d=s.n(i);t.a=new class{async getList({bookIds:e="",classIds:t="",toggle:s="",bookListName:o="",collegeId:i="",subscriptionId:l=""}){const c=r.a.pickBy({bookIds:e,classIds:t,subscriptionId:l,toggle:s,bookListName:o,collegeId:i},r.a.identity);try{return{code:0,data:await a.c.findAll({where:c,raw:!0,include:[{model:a.f,attributes:[],as:"college"},{model:a.o,attributes:[],as:"subscription"}],attributes:["id","bookListName","collegeId","toggle","bookIds","classIds",d.a.col("collegeName"),"subscriptionId",d.a.col("subscription.subscriptionName"),d.a.col("subscription.status")]})}}catch(e){return console.log(e),console.log("MethodError: <BookListModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({bookIds:e="",classIds:t="",toggle:s="",bookListName:o="",collegeId:i="",subscriptionId:d=""}){if(!r.a.isEmpty(r.a.omitBy({classIds:t,toggle:s,subscriptionId:d,bookListName:o,collegeId:i},r.a.identity)))return{code:9999,message:"参数不能为空"};try{return await a.c.create({bookListName:o,bookIds:e,classIds:t,subscriptionId:d,collegeId:i,toggle:"1"===s.toString()?"1":"0"}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <BookListModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!r.a.isEmpty(r.a.omitBy({id:e},r.a.identity)))return{code:9999,message:"参数不能为空"};try{return await a.c.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <BookListModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",bookIds:t="",classIds:s="",toggle:o="",subscriptionId:i="",bookListName:d="",collegeId:l=""}){if(!r.a.isEmpty(r.a.omitBy({id:e,bookIds:t,classIds:s,subscriptionId:i,toggle:o,bookListName:d,collegeId:l},r.a.identity)))return{code:9999,message:"参数不能为空"};try{return await a.c.update({bookListName:d,bookIds:t,classIds:s,subscriptionId:i,collegeId:l,toggle:"1"===o.toString()?"1":"0"},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <BookListModel.update>"),{code:9999,message:"系统内部错误"}}}async edit({id:e="",bookIds:t="",classIds:s=""}){if(!r.a.isEmpty(r.a.omitBy({id:e,bookIds:t,classIds:s},r.a.identity)))return{code:9999,message:"参数不能为空"};try{return await a.c.update({bookIds:t,classIds:s},{where:{id:e,toggle:1}}),{code:0,message:"编辑成功"}}catch(e){return console.log("MethodError: <BookListModel.edit>"),{code:9999,message:"系统内部错误"}}}async getBookListInfo({id:e="",status:t=""}){try{const s=await a.n.findOne({raw:!0,where:{userId:e},attributes:["classId"]});return s?{code:0,data:(await a.c.findAll({raw:!0,where:{toggle:1},include:[{model:a.f,attributes:[],as:"college"},{model:a.o,where:{status:t},attributes:[],as:"subscription"}],attributes:["id","bookListName",d.a.col("college.collegeName"),"bookIds","classIds","subscriptionId",d.a.col("subscription.subscriptionName"),d.a.col("subscription.status")]})).filter(e=>e.classIds.split(",").includes(s.classId.toString()))}:{code:0,data:{}}}catch(e){console.log(e)}}async getToSubList({id:e=""}){if(!r.a.isEmpty(r.a.omitBy({id:e},r.a.identity)))return{code:9999,message:"参数不能为空"};try{const t=await a.c.findAll({raw:!0,where:{toggle:1},include:[{model:a.o,where:{status:"1"},attributes:[],as:"subscription"}],attributes:["bookIds",[d.a.col("subscription.id"),"subscriptionId"],d.a.col("subscription.subscriptionName"),[d.a.col("subscription.status"),"subscriptionStatus"]]}),s=t.map(e=>({subscriptionId:e.subscriptionId,subscriptionName:e.subscriptionName,subscriptionStatus:e.subscriptionStatus})),o=r.a.uniqWith(s,r.a.isEqual);if(0===o.length)return{code:0,data:[]};return{code:0,data:await Promise.all(o.map(async s=>{const o=t.filter(e=>e.subscriptionId===s.subscriptionId),i=r.a.uniq(o.map(e=>e.bookIds).join(",").split(",")),d=await Promise.all(i.map(async e=>await a.b.findOne({raw:!0,where:{id:e},attributes:["id","bookName","ISBN"]})));return await Promise.all(d.map(async t=>({...t,...await a.i.findOne({raw:!0,where:{bookId:t.id,sellerId:e,subscriptionId:s.subscriptionId},attributes:["price","status"]}),...s})))}))}}catch(e){console.log(e)}}async getAssignerBookList({assignId:e=""}){if(!r.a.isEmpty(r.a.omitBy({assignId:e},r.a.identity)))return{code:9999,message:"参数不能为空"};try{const t=await a.a.findAll({raw:!0,where:{assignId:e,status:1},attributes:["classId"]}),s=[...new Set(t.map(e=>e.classId))];return{code:0,data:(await a.c.findAll({raw:!0,where:{toggle:1},include:[{model:a.o,attributes:[],where:{status:4},as:"subscription"},{model:a.f,attributes:[],as:"college"}],attributes:["id","bookListName","collegeId",d.a.col("college.collegeName"),"bookIds","classIds","subscriptionId",d.a.col("subscription.subscriptionName"),d.a.col("subscription.status")]})).filter(e=>e.classIds.split(",").some(e=>s.includes(parseInt(e,10))))}}catch(e){console.log(e)}}async getAssignerBookListWithClass({assignId:e=""}){if(!r.a.isEmpty(r.a.omitBy({assignId:e},r.a.identity)))return{code:9999,message:"参数不能为空"};try{const t=await a.a.findAll({raw:!0,where:{assignId:e,status:1},attributes:["classId"]}),s=[...new Set(t.map(e=>e.classId))],o=(await Promise.all(s.map(async e=>{const t=await a.n.findAll({raw:!0,where:{classId:e},include:[{model:a.e,attributes:[],as:"class"}],attributes:["userId",d.a.col("class.className")]}),s=await Promise.all(t.map(async e=>a.r.findAll({raw:!0,where:{userId:e.userId,isPay:1},attributes:["bookId","subscriptionId"]}))),o=r.a.groupBy(r.a.flatten(s),"subscriptionId");for(let e in o)o.hasOwnProperty(e)&&(o[e]=r.a.countBy(o[e],"bookId"));return{data:o,classId:e}}))).filter(e=>"{}"!==JSON.stringify(e.data)).map(e=>{return Object.keys(e.data).reduce((t,s)=>{const a={subscriptionId:s,bookList:Object.keys(e.data[s]).reduce((t,a)=>(t.push({bookId:a,count:e.data[s][a]}),t),[]),classId:e.classId};return t.push(a),t},[])});return{code:0,data:r.a.flatten(o)}}catch(e){console.log(e)}}async createExcelBookList({assignId:e=""}){try{const t=await this.getAssignerBookListWithClass({assignId:e}),s=await a.a.findOne({raw:!0,where:{assignId:e},include:[{model:a.q,attributes:[],as:"user"}],attributes:[d.a.col("user.realName"),d.a.col("user.phoneNumber")]}),o=t.data;return{data:(await Promise.all(o.map(async e=>{const t=await a.o.findOne({raw:!0,where:{id:e.subscriptionId,status:4},attributes:["subscriptionName"]});if(!t)return;const s=t.subscriptionName,o=await a.e.findOne({raw:!0,include:[{model:a.f,attributes:[],as:"college"}],where:{id:e.classId},attributes:["className",d.a.col("college.collegeName")]});return{subscriptionName:s,className:`${o.collegeName}-${o.className}`,bookList:await Promise.all(e.bookList.map(async t=>{return{...await a.i.findOne({raw:!0,where:{status:2,bookId:t.bookId,subscriptionId:e.subscriptionId},include:[{model:a.l,as:"seller",attributes:[]},{model:a.b,as:"book",attributes:[]}],attributes:["sellerId",d.a.col("book.bookName"),d.a.col("book.ISBN"),d.a.col("seller.sellerName"),d.a.col("seller.phoneNumber"),d.a.col("seller.address"),d.a.col("seller.source"),d.a.col("seller.email"),"price"]}),count:t.count}}))}}))).filter(e=>!!e),assignerInfo:s}}catch(e){console.log(e)}}async createExcelDetailBookList({assignId:e=""}){try{const t=await this.getAssignerBookListWithClass({assignId:e}),s=await a.a.findOne({raw:!0,where:{assignId:e},include:[{model:a.q,attributes:[],as:"user"}],attributes:[d.a.col("user.realName"),d.a.col("user.phoneNumber")]}),o=t.data;return{data:(await Promise.all(o.map(async e=>{const t=await a.o.findOne({raw:!0,where:{id:e.subscriptionId,status:4},attributes:["subscriptionName"]});if(!t)return;const s=t.subscriptionName,o=await a.e.findOne({raw:!0,include:[{model:a.f,attributes:[],as:"college"}],where:{id:e.classId},attributes:["className",d.a.col("college.collegeName")]});return{subscriptionName:s,className:`${o.collegeName}-${o.className}`,bookList:await Promise.all(e.bookList.map(async t=>{const{subscriptionId:s}=e,o=await a.i.findOne({raw:!0,where:{status:2,bookId:t.bookId,subscriptionId:s},include:[{model:a.l,as:"seller",attributes:[]},{model:a.b,as:"book",attributes:[]}],attributes:["sellerId","bookId",d.a.col("book.bookName"),d.a.col("book.ISBN"),d.a.col("seller.sellerName"),d.a.col("seller.phoneNumber"),d.a.col("seller.address"),d.a.col("seller.source"),d.a.col("seller.email"),"price"]}),r=await a.r.findAll({raw:!0,where:{bookId:o.bookId,subscriptionId:s,isPay:1},include:[{model:a.q,as:"user",attributes:[]}],attributes:["id","userId",d.a.col("user.account"),d.a.col("user.realName"),d.a.col("user.phoneNumber")]});return{...o,userInfoList:r}}))}}))).filter(e=>!!e),assignerInfo:s}}catch(e){console.log(e)}}}},function(e,t){e.exports=require("path")},function(e,t,s){"use strict";t.a={user:"root",password:"yellow",database:"subscription",host:"101.132.159.200",port:3306}},function(e,t,s){"use strict";(function(e){s.d(t,"b",(function(){return n})),s.d(t,"a",(function(){return u}));var a=s(12),o=s.n(a),r=s(7),i=s.n(r),d=s(15),l=s.n(d),c=s(13);const n=t=>{const s=o.a.readFileSync(i.a.resolve(e,"../dist/src/public/rsa_private_key.pem"),"utf-8");let a=Buffer.from(t,"base64");return l.a.privateDecrypt({key:s,padding:l.a.constants.RSA_PKCS1_PADDING},a).toString("utf-8")},u=async(e,t)=>{const s=await Object(c.a)(e);return null!=s&&s.toLowerCase()===t.toLowerCase()}}).call(this,"src\\utils")},function(e,t,s){"use strict";(function(e,a){var o=s(12),r=s.n(o),i=s(7),d=s.n(i),l=s(9),c=s(28),n=s.n(c),u=s(13),g=s(17),y=s.n(g),m=s(6),p=s(3),b=s.n(p),I=s(1),h=s.n(I);t.a=new class{constructor(e){}async getPublicKey(t){const s=r.a.readFileSync(d.a.resolve(e,"../dist/src/public/rsa_public_key.pem"),"utf-8");t.body={code:0,data:{publicKey:s}}}async test(t){t.body={code:0,data:{path:e,name:a,who:d.a.resolve(e),wholePath2:d.a.resolve(e,"../dist/src/public/rsa_public_key.pem"),wholePath3:d.a.resolve(e,"../dist/public/rsa_public_key.pem")}}}async decrypt(e){let t=e.request.body.key.replace(/\s+/g,"+");const s=Object(l.b)(t);console.log(s)}async getCaptcha(e){const{sid:t}=e.query,s=n.a.create({size:4,fontSize:50,color:!0,ignoreChars:"0oOiIlL",noise:Math.floor(3*Math.random()+2),width:195,height:40});Object(u.b)(t,s.text,90),e.body={code:200,data:s.data}}async createExcel(e){const{_auth:t,_uid:s}=b()(e.params.auth),a=await m.a.createExcelBookList({assignId:s});a&&a.data.length<=0&&(e.body={code:0,message:"暂无书单"});let o=[];a.data.map(e=>{const{subscriptionName:t,className:s,bookList:r}=e,i=[[t],[s,null,null,null,null,null,null,null,null,"日期:",new Date],["ISBN",null,"教材名称",null,"批发商",null,"手机号","邮箱",null,"地址",null,"单价","数量"],...r.map(e=>{const{ISBN:t,bookName:s,sellerName:a,phoneNumber:o,email:r,address:i,count:d,price:l,source:c}=e;return[t,null,s,null,`${c}-${a}`,null,o,r,null,i,null,l,d]})],d=[{s:{c:0,r:0},e:{c:12,r:0}},{s:{c:0,r:1},e:{c:4,r:1}},{s:{c:10,r:1},e:{c:12,r:1}},{s:{c:0,r:2},e:{c:1,r:2}},{s:{c:2,r:2},e:{c:3,r:2}},{s:{c:4,r:2},e:{c:5,r:2}},{s:{c:7,r:2},e:{c:8,r:2}},{s:{c:9,r:2},e:{c:10,r:2}}];r.map((e,t)=>{d.push({s:{c:0,r:2+t+1},e:{c:1,r:2+t+1}},{s:{c:2,r:2+t+1},e:{c:3,r:2+t+1}},{s:{c:4,r:2+t+1},e:{c:5,r:2+t+1}},{s:{c:7,r:2+t+1},e:{c:8,r:2+t+1}},{s:{c:9,r:2+t+1},e:{c:10,r:2+t+1}})}),d.push({s:{c:0,r:6},e:{c:1,r:6}},{s:{c:0,r:7},e:{c:1,r:7}});let l=0,c=0;r.map(e=>{l+=e.count*e.price,c+=e.count}),i.push([`分配员:${a.assignerInfo.realName}`],[`联系方式:${a.assignerInfo.phoneNumber}`,null,null,null,null,null,null,null,null,null,"合计:",l,c]);const n={"!merges":d,"!cols":[{wch:7.5},{wch:15},{wch:15},{wch:15},{wch:7.5},{wch:7.5},{wch:15},{wch:7.5},{wch:7.5},{wch:15},{wch:15},{wch:10},{wch:5}]};o.push({name:`${t}-${s}`.slice(0,31),data:i,options:n})});const r=y.a.build(o);e.set("Content-Type","application/vnd.openxmlformats"),e.set("Content-Disposition","attachment; filename=bookList.xlsx"),e.body=r}async createExcelDetail(e){const{_auth:t,_uid:s}=b()(e.params.auth),a=await m.a.createExcelDetailBookList({assignId:s});a&&a.data.length<=0&&(e.body={code:0,message:"暂无书单"});let o=[];a.data.map(e=>{const{subscriptionName:t,className:s,bookList:r}=e,i=[[t],[s,null,null,null,null,null,null,null,null,"日期:",new Date],["ISBN",null,"教材名称",null,"批发商",null,"手机号","学号",null,"学生手机号",null,"姓名","单价"],...h.a.flatten(r.map(e=>{const{ISBN:t,bookName:s,sellerName:a,phoneNumber:o,userInfoList:r,price:i,source:d}=e;return r.map(e=>{const{realName:r,account:l,phoneNumber:c}=e;return[t,null,s,null,`${d}-${a}`,null,o,l,null,c,null,r,i]})}))];console.log(i);const d=[{s:{c:0,r:0},e:{c:12,r:0}},{s:{c:0,r:1},e:{c:4,r:1}},{s:{c:10,r:1},e:{c:12,r:1}},{s:{c:0,r:2},e:{c:1,r:2}},{s:{c:2,r:2},e:{c:3,r:2}},{s:{c:4,r:2},e:{c:5,r:2}},{s:{c:7,r:2},e:{c:8,r:2}},{s:{c:9,r:2},e:{c:10,r:2}}];r.map((e,t)=>{d.push({s:{c:0,r:2+t+1},e:{c:1,r:2+t+1}},{s:{c:2,r:2+t+1},e:{c:3,r:2+t+1}},{s:{c:4,r:2+t+1},e:{c:5,r:2+t+1}},{s:{c:7,r:2+t+1},e:{c:8,r:2+t+1}},{s:{c:9,r:2+t+1},e:{c:10,r:2+t+1}})}),d.push({s:{c:0,r:6},e:{c:1,r:6}},{s:{c:0,r:7},e:{c:1,r:7}});let l=0,c=0;r.map(e=>{l+=e.count*e.price,c+=e.count}),i.push([`分配员:${a.assignerInfo.realName}`],[`联系方式:${a.assignerInfo.phoneNumber}`,null,null,null,null,null,null,null,null,null,null,null,null]);const n={"!merges":d,"!cols":[{wch:7.5},{wch:15},{wch:15},{wch:15},{wch:7.5},{wch:7.5},{wch:15},{wch:7.5},{wch:7.5},{wch:15},{wch:15},{wch:10},{wch:5}]};o.push({name:`${t}-${s}`.slice(0,31),data:i,options:n})});const r=y.a.build(o);e.set("Content-Type","application/vnd.openxmlformats"),e.set("Content-Disposition","attachment; filename=bookList.xlsx"),e.body=r}}}).call(this,"src\\controller\\Public","src\\controller\\Public\\index.js")},function(e,t,s){"use strict";t.a={secret:"a&*38QthAKuiRwISGLotgq^3%^$zvA3A6Hfr8MF$jM*HY4*dWcwAW&9NGp7*b53!"}},function(e,t){e.exports=require("fs")},function(e,t,s){"use strict";s.d(t,"b",(function(){return l})),s.d(t,"a",(function(){return c}));var a=s(16),o=s.n(a),r=s(27);const i={host:"101.132.159.200",port:15001,password:"123456",detect_buffers:!0,no_ready_check:!0,retry_strategy:function(e){return e.error&&"ECONNREFUSED"===e.error.code?new Error("The server refused the connection"):e.total_retry_time>36e5?new Error("Retry time exhausted"):e.attempt>10?void 0:Math.min(100*e.attempt,3e3)}},d=Object(r.promisifyAll)(o.a.createClient(i));d.on("error",e=>console.log("Redis Client Error:"+e));const l=(e,t,s)=>{void 0!==t&&null!=t&&""!==t&&("string"==typeof t?void 0!==s?d.set(e,t,"EX",s):d.set(e,t):"object"==typeof t&&Object.keys(t).forEach(s=>d.hset(e,s,t[s],o.a.print)))},c=e=>d.getAsync(e)},function(e,t,s){"use strict";var a=s(8);s.d(t,"b",(function(){return a.a}));var o=s(11);s.d(t,"a",(function(){return o.a}))},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("redis")},function(e,t){e.exports=require("node-xlsx")},function(e,t){e.exports=require("koa")},function(e,t){e.exports=require("koa-jwt")},function(e,t){e.exports=require("koa-helmet")},function(e,t){e.exports=require("koa-static")},function(e,t){e.exports=require("koa2-cors")},function(e,t){e.exports=require("koa-bodyparser")},function(e,t){e.exports=require("koa-compose")},function(e,t,s){"use strict";t.a=(e,t)=>t().catch(t=>{401===t.status?(e.status=401,e.body={code:401,message:"Protected resource, use Authorization header to get access\n"}):(e.status=t.status||500,e.body=Object.assign({code:500,message:t.message},{}))})},function(e,t){e.exports=require("koa-combine-routers")},function(e,t){e.exports=require("bluebird")},function(e,t){e.exports=require("svg-captcha")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports=require("mysql")},function(e,t,s){"use strict";var a=s(26),o=s.n(a),r=s(4),i=s.n(r),d=s(2),l=s(1),c=s.n(l);var n=new class{async getList({routerName:e="",routerUrl:t="",toggle:s=""}){const a=c.a.pickBy({routerName:e,routerUrl:t,toggle:"1"===s?"1":"0"===s?"0":""},c.a.identity);try{return{code:0,data:await d.k.findAll({where:a,raw:!0})}}catch(e){return console.log("MethodError: <RouterModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({routerName:e="",routerUrl:t="",toggle:s=""}){if(!c.a.isEmpty(c.a.omitBy({routerName:e,routerUrl:t,toggle:s},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.k.create({routerName:e,routerUrl:t,toggle:"1"===s.toString()?"1":"0"}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <RouterModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.k.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <RouterModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",routerName:t="",routerUrl:s="",toggle:a=""}){if(!c.a.isEmpty(c.a.omitBy({routerName:t,routerUrl:s,toggle:a,id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.k.update({routerName:t,routerUrl:s,toggle:"1"===a.toString()?"1":"0"},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <RouterModel.update>"),{code:9999,message:"系统内部错误"}}}},u=s(0),g=s.n(u),y=s(3),m=s.n(y);const p=g.a.Op;var b=new class{constructor(){}async getList(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"暂无权限访问该接口"};else{const{routerName:t="",routerUrl:s="",toggle:a}=e.query;e.body=await n.getList({routerName:{[p.like]:`%${t}%`},routerUrl:{[p.like]:`%${s}%`},toggle:a})}}async add(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"暂无权限访问该接口"};else{const{routerName:t,routerUrl:s,toggle:a}=e.request.body;e.body=await n.insert({routerName:t,routerUrl:s,toggle:a})}}async delete(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"暂无权限访问该接口"};else{const{id:t}=e.params;e.body=await n.deleteById({id:t})}}async update(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"暂无权限访问该接口"};else{const{id:t}=e.params,{routerName:s,routerUrl:a,toggle:o}=e.request.body;e.body=await n.update({id:t,routerName:s,routerUrl:a,toggle:o})}}};const I=new i.a;I.prefix("/api/sys/router"),I.get("/getList",b.getList),I.post("/add",b.add),I.post("/delete/:id",b.delete),I.post("/update/:id",b.update);var h=I;const w=new i.a;w.prefix("/api/client/router"),w.get("/getList",b.getList),w.post("/add",b.add),w.post("/delete/:id",b.delete),w.post("/update/:id",b.update);var N=new class{async getList({roleName:e="",toggle:t=""}){const s=c.a.pickBy({roleName:e,toggle:"1"===t?"1":"0"===t?"0":""},c.a.identity);try{return{code:0,data:await d.j.findAll({where:s,raw:!0})}}catch(e){return console.log(e),console.log("MethodError: <RoleModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({roleName:e="",toggle:t=""}){if(!c.a.isEmpty(c.a.omitBy({roleName:e,toggle:t},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.j.create({roleName:e,toggle:"1"===t.toString()?"1":"0"}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <RoleModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.j.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <RoleModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",roleName:t="",toggle:s=""}){if(!c.a.isEmpty(c.a.omitBy({roleName:t,id:e,toggle:s},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.j.update({roleName:t,toggle:"1"===s.toString()?"1":"0"},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <RoleModel.update>"),{code:9999,message:"系统内部错误"}}}};const f=g.a.Op;var k=new class{constructor(){}async getList(e){const{roleName:t="",toggle:s}=e.query;e.body=await N.getList({roleName:{[f.like]:`%${t}%`},toggle:s})}async add(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{roleName:t,toggle:s}=e.request.body;e.body=await N.insert({roleName:t,toggle:s})}}async delete(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params;e.body=await N.deleteById({id:t})}}async update(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params,{roleName:s,toggle:a}=e.request.body;e.body=await N.update({id:t,roleName:s,toggle:a})}}};const B=new i.a;B.prefix("/api/sys/role"),B.get("/getList",k.getList),B.post("/add",k.add),B.post("/delete/:id",k.delete),B.post("/update/:id",k.update);var L=B;var E=new class{async getList(){try{return{code:0,data:await d.d.findAll({include:[{model:d.j,attributes:[],as:"role"}],raw:!0,attributes:["id","roleId","role.roleName","role.toggle","routerIds"]})}}catch(e){return console.log("MethodError: <CategoryModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({roleId:e="",routerIds:t=""}){if(!c.a.isEmpty(c.a.omitBy({roleId:e,routerIds:t},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.d.create({roleId:e,routerIds:t}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <CategoryModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.d.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <CategoryModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",roleId:t="",routerIds:s=""}){if(!c.a.isEmpty(c.a.omitBy({roleId:t,id:e,routerIds:s},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.d.update({roleId:t,routerIds:s},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <CategoryModel.update>"),{code:9999,message:"系统内部错误"}}}async getCategoryList({roleId:e=""}){try{const t=await d.k.findAll({where:{toggle:"1"},raw:!0,attributes:["id","routerName","routerUrl"]}),s=(await d.d.findOne({where:{roleId:e},raw:!0,attributes:["routerIds"]})).routerIds.split(",");return{code:0,data:t.filter(e=>s.includes(e.id.toString()))}}catch(e){console.log(e)}}};var M=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);e.body=1!==t?{code:9999,message:"你无权进行此操作"}:await E.getList()}async add(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{routerList:t=[],roleId:s}=e.request.body;e.body=await E.insert({routerIds:t.toString(),roleId:s})}}async update(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params,{roleId:s,routerList:a=[]}=e.request.body;e.body=await E.update({id:t,routerIds:a.toString(),roleId:s})}}async getUserList(e){const{_auth:t}=m()(e.header.authorization);e.body=await E.getCategoryList({roleId:t})}};const q=new i.a;q.prefix("/api/sys/category"),q.get("/getList",M.getList),q.post("/update/:id",M.update),q.post("/add",M.add);var S=q;const _=new i.a;_.prefix("/api/client/category"),_.get("/getList",M.getUserList);var T=_;var A=new class{async getList({roleId:e="",account:t="",realName:s="",phoneNumber:a="",toggle:o=""}){const r=c.a.pickBy({roleId:e,account:t,realName:s,phoneNumber:a,toggle:"1"===o?"1":"0"===o?"0":""},c.a.identity);try{return{code:0,data:await d.p.findAll({where:r,include:[{model:d.j,attributes:[],as:"role"}],raw:!0,attributes:["id","roleId",g.a.col("role.roleName"),"account","realName","phoneNumber","toggle"]})}}catch(e){return console.log("MethodError: <SysManager.getList>"),{code:9999,message:"系统内部错误"}}}async insert({roleId:e="",account:t="",realName:s="",phoneNumber:a="",password:o="",toggle:r=""}){if(!c.a.isEmpty(c.a.omitBy({roleId:e,account:t,realName:s,phoneNumber:a,password:o,toggle:r},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.p.create({roleId:e,account:t,realName:s,phoneNumber:a,password:o,toggle:"1"===r.toString()?"1":"0"}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <SysManagerModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.p.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <SysManagerModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",roleId:t="",account:s="",realName:a="",phoneNumber:o="",password:r="",toggle:i=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,roleId:t,account:s,realName:a,phoneNumber:o,password:r,toggle:i},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.p.update({roleId:t,account:s,realName:a,phoneNumber:o,password:r,toggle:"1"===i.toString()?"1":"0"},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <SysManagerModel.update>"),{code:9999,message:"系统内部错误"}}}};const v=g.a.Op;var z=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{roleId:t,account:s="",realName:a="",phoneNumber:o="",toggle:r}=e.query;e.body=await A.getList({roleId:t,toggle:r,account:{[v.like]:`%${s}%`},realName:{[v.like]:`%${a}%`},phoneNumber:{[v.like]:`%${o}%`}})}}async add(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{roleId:t,account:s,password:a,realName:o,phoneNumber:r,toggle:i}=e.request.body;e.body=await A.insert({roleId:t,account:s,password:a,realName:o,phoneNumber:r,toggle:i})}}async delete(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params;e.body=await A.deleteById({id:t})}}async update(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params,{roleId:s,account:a,password:o,realName:r,phoneNumber:i,toggle:d}=e.request.body;e.body=await A.update({id:t,roleId:s,account:a,password:o,realName:r,phoneNumber:i,toggle:d})}}};const C=new i.a;C.prefix("/api/sys/sysManager"),C.get("/getList",z.getList),C.post("/add",z.add),C.post("/delete/:id",z.delete),C.post("/update/:id",z.update);var R=C;const U=new i.a;U.prefix("/api/client/sysManager"),U.get("/getList",z.getList),U.post("/add",z.add),U.post("/delete/:id",z.delete),U.post("/update/:id",z.update);var x=s(10),O=s(29),G=s.n(O),$=s(9),P=s(11);var K=new class{constructor(){}async login(e){const{captcha:t,sid:s,account:a,password:o,roleId:r}=e.request.body;if(await Object($.a)(s,t)){let t=await{1:async()=>d.p.findOne({where:{account:a,roleId:r,toggle:1}}),2:async()=>d.p.findOne({where:{account:a,roleId:r,toggle:1}}),3:async()=>d.q.findOne({where:{account:a,roleId:r,toggle:1}}),4:async()=>d.q.findOne({where:{account:a,roleId:r,toggle:1}}),5:async()=>d.l.findOne({where:{phoneNumber:a,roleId:r,toggle:1}}),6:async()=>d.q.findOne({where:{account:a,roleId:r,toggle:1}})}[r]();if(!!t&&Object($.b)(t.password)===Object($.b)(o)){const{account:s="",roleId:a,realName:o="",sellerName:r="",phoneNumber:i="",id:d=""}=t.dataValues;let l=G.a.sign({_id:s||i,_auth:a,_uid:d,_userName:o||r},P.a.secret,{expiresIn:"6h"});e.body={code:200,message:"登录成功",token:l}}else e.body={code:404,message:"用户名或者密码错误"}}else e.body={code:401,message:"图片验证码不正确"}}};const j=new i.a;j.prefix("/api/public"),j.get("/getPublicKey",x.a.getPublicKey),j.post("/decrypt",x.a.decrypt),j.get("/getCaptcha",x.a.getCaptcha),j.post("/login",K.login),j.get("/getRoleList",k.getList),j.get("/getExcel/:auth",x.a.createExcel),j.get("/getExcelDetail/:auth",x.a.createExcelDetail),j.get("/test",x.a.test);var D=j;var Q=new class{async getList({collegeName:e="",toggle:t=""}){const s=c.a.pickBy({collegeName:e,toggle:"1"===t?"1":"0"===t?"0":""},c.a.identity);try{return{code:0,data:await d.f.findAll({where:s,raw:!0})}}catch(e){return console.log("MethodError: <CollegeModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({collegeName:e="",toggle:t=""}){if(!c.a.isEmpty(c.a.omitBy({collegeName:e,toggle:t},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.f.create({collegeName:e,toggle:"1"===t.toString()?"1":"0"}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <CollegeModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.f.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <CollegeModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",collegeName:t="",toggle:s=""}){if(!c.a.isEmpty(c.a.omitBy({collegeName:t,id:e,toggle:s},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.f.update({collegeName:t,toggle:"1"===s.toString()?"1":"0"},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <CollegeModel.update>"),{code:9999,message:"系统内部错误"}}}};const W=g.a.Op;var F=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);if([1,2,3].includes(t)){const{collegeName:t="",toggle:s}=e.query;e.body=await Q.getList({collegeName:{[W.like]:`%${t}%`},toggle:s})}else e.body={code:9999,message:"你无权进行此操作"}}async add(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{collegeName:t,toggle:s}=e.request.body;e.body=await Q.insert({collegeName:t,toggle:s})}else e.body={code:9999,message:"你无权进行此操作"}}async delete(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params;e.body=await Q.deleteById({id:t})}else e.body={code:9999,message:"你无权进行此操作"}}async update(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params,{collegeName:s,toggle:a}=e.request.body;e.body=await Q.update({id:t,collegeName:s,toggle:a})}else e.body={code:9999,message:"你无权进行此操作"}}};const H=new i.a;H.prefix("/api/sys/college"),H.get("/getList",F.getList),H.post("/add",F.add),H.post("/delete/:id",F.delete),H.post("/update/:id",F.update);var J=H;const V=new i.a;V.prefix("/api/client/college"),V.get("/getList",F.getList),V.post("/add",F.add),V.post("/delete/:id",F.delete),V.post("/update/:id",F.update);var X=new class{async getList({roleId:e="",account:t="",realName:s="",phoneNumber:a="",toggle:o=""}){const r=c.a.pickBy({roleId:e,account:t,realName:s,phoneNumber:a,toggle:"1"===o?"1":"0"===o?"0":""},c.a.identity);try{return{code:0,data:await d.q.findAll({where:r,include:[{model:d.j,attributes:[],as:"role"}],raw:!0,attributes:["id","roleId",g.a.col("role.roleName"),"account","realName","phoneNumber","toggle"]})}}catch(e){return console.log("MethodError: <UserModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({roleId:e="",account:t="",realName:s="",phoneNumber:a="",password:o="",toggle:r=""}){if(!c.a.isEmpty(c.a.omitBy({roleId:e,account:t,realName:s,phoneNumber:a,password:o,toggle:r},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.q.create({roleId:e,account:t,realName:s,phoneNumber:a,password:o,toggle:"1"===r.toString()?"1":"0"}),{code:0,message:"添加成功"}}catch(e){return console.log(e),console.log("MethodError: <UserModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.q.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <UserModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",roleId:t="",account:s="",realName:a="",phoneNumber:o="",password:r="",toggle:i=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,roleId:t,account:s,realName:a,phoneNumber:o,password:r,toggle:i},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.q.update({roleId:t,account:s,realName:a,phoneNumber:o,password:r,toggle:"1"===i.toString()?"1":"0"},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <UserModel.update>"),{code:9999,message:"系统内部错误"}}}async getTeacherList(){try{return{code:0,data:await d.q.findAll({where:{roleId:"3",toggle:"1"},include:[{model:d.j,attributes:[],as:"role"}],raw:!0,attributes:["id","roleId",g.a.col("role.roleName"),"account","realName","phoneNumber","toggle"]})}}catch(e){return console.log("MethodError: <UserModel.getTeacherList>"),{code:9999,message:"系统内部错误"}}}async getAssignUserList(e=""){try{return{code:0,data:await d.q.findAll({raw:!0,where:{roleId:e?"6":"4"},attributes:["id","account","realName"]})}}catch(e){return console.log("MethodError: <UserModel.getAssignList>"),{code:9999,message:"系统内部错误"}}}async getUserInfo({roleId:e="",account:t=""}){try{const s=await d.q.findOne({raw:!0,where:{roleId:e,account:t},include:[{model:d.j,attributes:[],as:"role"}],attributes:["id","account","realName","phoneNumber",g.a.col("role.roleName")]}),a=s?await d.n.findOne({raw:!0,where:{userId:s.id},include:[{model:d.e,attributes:[],as:"class",include:[{model:d.f,attributes:[],as:"college"}]}],attributes:[g.a.col("class.className"),g.a.col("class.session"),g.a.col("class.college.collegeName")]}):{};return{code:0,data:{...s,...a}}}catch(e){console.log(e)}}async editUserInfo({account:e="",password:t="",userId:s="",phoneNumber:a=""}){try{return await d.q.update({password:t,phoneNumber:a},{where:{account:e,id:s}}),{code:0,message:"更新成功"}}catch(e){return console.log(e),{code:9999,message:"系统内部错误"}}}};const Y=g.a.Op;var Z=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{roleId:t,account:s="",realName:a="",phoneNumber:o="",toggle:r}=e.query;e.body=await X.getList({roleId:t,toggle:r,account:{[Y.like]:`%${s}%`},realName:{[Y.like]:`%${a}%`},phoneNumber:{[Y.like]:`%${o}%`}})}}async add(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{roleId:t,account:s,password:a,realName:o,phoneNumber:r,toggle:i}=e.request.body;e.body=await X.insert({roleId:t,account:s,password:a,realName:o,phoneNumber:r,toggle:i})}}async delete(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params;e.body=await X.deleteById({id:t})}else e.body={code:9999,message:"你无权进行此操作"}}async update(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params,{roleId:s,account:a,password:o,realName:r,phoneNumber:i,toggle:d}=e.request.body;e.body=await X.update({id:t,roleId:s,account:a,password:o,realName:r,phoneNumber:i,toggle:d})}}async getTeacherList(e){const{_auth:t}=m()(e.header.authorization);e.body=1!==t?{code:9999,message:"你无权进行此操作"}:await X.getTeacherList()}async getAssignUserList(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{toggle:t}=e.query;e.body=await X.getAssignUserList(t)}else e.body={code:9999,message:"你无权进行此操作"}}async getInfo(e){const{_auth:t,_id:s}=m()(e.header.authorization);e.body=4!==t?{code:9999,message:"你无权进行此操作"}:await X.getUserInfo({roleId:t,account:s})}async getAssignList(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{account:t="",realName:s="",phoneNumber:a="",toggle:o}=e.query;e.body=await X.getList({roleId:"6",toggle:o,account:{[Y.like]:`%${t}%`},realName:{[Y.like]:`%${s}%`},phoneNumber:{[Y.like]:`%${a}%`}})}else e.body={code:9999,message:"你无权进行此操作"}}async addAssign(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{account:t,password:s,realName:a,phoneNumber:o,toggle:r}=e.request.body;e.body=await X.insert({roleId:"6",account:t,password:s,realName:a,phoneNumber:o,toggle:r})}else e.body={code:9999,message:"你无权进行此操作"}}async updateAssign(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params,{account:s,password:a,realName:o,phoneNumber:r,toggle:i}=e.request.body;e.body=await X.update({id:t,roleId:"6",account:s,password:a,realName:o,phoneNumber:r,toggle:i})}else e.body={code:9999,message:"你无权进行此操作"}}async editInfo(e){const{_auth:t,_uid:s,_id:a}=m()(e.header.authorization);if(4!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{password:t,phoneNumber:o}=e.request.body;e.body=await X.editUserInfo({account:a,userId:s,password:t,phoneNumber:o})}}};const ee=new i.a;ee.prefix("/api/sys/userManage"),ee.get("/getList",Z.getList),ee.get("/getTeacherList",Z.getTeacherList),ee.get("/getAssignUserList",Z.getAssignUserList),ee.get("/getAssignerList",Z.getAssignList),ee.post("/add",Z.add),ee.post("/addAssigner",Z.addAssign),ee.post("/delete/:id",Z.delete),ee.post("/update/:id",Z.update),ee.post("/updateAssigner/:id",Z.updateAssign);var te=ee;const se=new i.a;se.prefix("/api/client/user"),se.get("/getInfo",Z.getInfo),se.post("/editInfo",Z.editInfo);var ae=se;var oe=new class{async getList({collegeId:e="",className:t="",session:s="",toggle:a=""}){const o=c.a.pickBy({collegeId:e,className:t,session:s,toggle:"1"===a?"1":"0"===a?"0":""},c.a.identity);try{return{code:0,data:await d.e.findAll({where:o,include:[{model:d.f,attributes:[],as:"college"}],raw:!0,attributes:["id","collegeId",g.a.col("college.collegeName"),"className","session","toggle"]})}}catch(e){return console.log("MethodError: <ClassModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({collegeId:e="",className:t="",session:s="",toggle:a=""}){if(!c.a.isEmpty(c.a.omitBy({collegeId:e,className:t,session:s,toggle:a},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.e.create({collegeId:e,className:t,session:s,toggle:"1"===a.toString()?"1":"0"}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <ClassModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.e.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <ClassModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",collegeId:t="",className:s="",session:a="",toggle:o=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,collegeId:t,className:s,session:a,toggle:o},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.e.update({collegeId:t,className:s,session:a,toggle:"1"===o.toString()?"1":"0"},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <ClassModel.update>"),{code:9999,message:"系统内部错误"}}}async getUserClassList(){try{return{code:0,data:await d.e.findAll({raw:!0,where:{toggle:1},include:[{model:d.f,attributes:[],as:"college"}],attributes:["id","className","session",g.a.col("college.collegeName")]})}}catch(e){console.log(e)}}async getAssignerClassList({assignId:e}){try{const t=await d.a.findAll({raw:!0,where:{assignId:e,status:1},attributes:["classId"]}),s=[...new Set(t.map(e=>e.classId))],a=await Promise.all(s.map(async e=>d.e.findAll({raw:!0,where:{id:e},include:[{model:d.f,attributes:[],as:"college"}],attributes:["id","className","collegeId",g.a.col("college.collegeName")]})));return{code:0,data:c.a.flatten(a)}}catch(e){console.log(e)}}};var re=new class{async getList({classId:e="",account:t="",realName:s="",phoneNumber:a="",roleId:o="",roleName:r="",collegeId:i,collegeName:l}){const n=c.a.pickBy({classId:e,toggle:toggle},c.a.identity),u=c.a.pickBy({account:t,realName:s,phoneNumber:a},c.a.identity),y=c.a.pickBy({roleId:o,roleName:r},c.a.identity),m=c.a.pickBy({collegeId:i,collegeName:l});try{await d.n.findAll({where:n,raw:!0,include:[{model:d.q,attributes:[],as:"user",where:u},{model:d.j,attributes:[],as:"role",where:y},{model:d.f,attributes:[],as:"college",where:m},{model:d.e,attributes:[],as:"class"}],attributes:[g.a.col("role.roleName"),g.a.col("user.roleId"),g.a.col("user.account"),g.a.col("user.realName"),g.a.col("user.phoneNumber"),g.a.col("collegeId")]})}catch(e){}}async getListByClassId({classId:e=""}){if(!c.a.isEmpty(c.a.omitBy({classId:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return{code:0,data:await d.n.findAll({where:{classId:e},raw:!0,include:[{model:d.q,as:"user",attributes:[],include:{model:d.j,attributes:[],as:"role"}},{model:d.e,attributes:[],as:"class"}],attributes:["id","classId","userId",g.a.col("user.roleId"),g.a.col("user.account"),g.a.col("user.realName"),g.a.col("user.phoneNumber"),g.a.col("user.role.roleName"),g.a.col("class.className"),g.a.col("class.session")],order:[[g.a.col("user.account")]]})}}catch(e){console.log(e)}}async getInfoByUserId({userId:e="",className:t="",session:s="",collegeName:a=""}){return d.n.findOne({raw:!0,where:{userId:e},include:[{model:d.e,attributes:[],where:{className:t,session:s},as:"class",include:[{model:d.f,attributes:[],where:{collegeName:a},as:"college"}]}],attributes:["classId",g.a.col("class.className"),g.a.col("class.session"),g.a.col("class.collegeId"),g.a.col("class.college.collegeName")]})}async insertByUser({userId:e="",classId:t=""}){try{return await d.n.create({userId:e,classId:t}),{code:0,message:"保存成功"}}catch(e){console.log(e)}}};const ie=g.a.Op;var de=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);if([1,2,3].includes(t)){const{collegeId:t,className:s="",session:a="",toggle:o}=e.query;e.body=await oe.getList({collegeId:t,toggle:o,session:{[ie.like]:`%${a}%`},className:{[ie.like]:`%${s}%`}})}else e.body={code:9999,message:"你无权进行此操作"}}async add(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{collegeId:t,className:s,session:a,toggle:o}=e.request.body;e.body=await oe.insert({collegeId:t,className:s,session:a,toggle:o})}else e.body={code:9999,message:"你无权进行此操作"}}async delete(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params;e.body=await oe.deleteById({id:t})}else e.body={code:9999,message:"你无权进行此操作"}}async update(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params,{collegeId:s,className:a,session:o,toggle:r}=e.request.body;e.body=await oe.update({id:t,collegeId:s,session:o,className:a,toggle:r})}else e.body={code:9999,message:"你无权进行此操作"}}async getListByClassId(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{classId:t}=e.params;e.body=await re.getListByClassId({classId:t})}else e.body={code:9999,message:"你无权进行此操作"}}async getUserClassList(e){const{_auth:t}=m()(e.header.authorization);e.body=4!==t?{code:9999,message:"你无权进行此操作"}:await oe.getUserClassList()}async getAssignerList(e){const{_auth:t,_uid:s}=m()(e.header.authorization);e.body=6!==t?{code:9999,message:"你无权进行此操作"}:await oe.getAssignerClassList({assignId:s})}async insertByUser(e){const{_auth:t,_uid:s}=m()(e.header.authorization);if(4!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{classId:t}=e.request.body;e.body=await re.insertByUser({userId:s,classId:t})}}};const le=new i.a;le.prefix("/api/sys/classManage"),le.get("/getList",de.getList),le.post("/add",de.add),le.post("/delete/:id",de.delete),le.post("/update/:id",de.update),le.get("/getListByClassId/:classId",de.getListByClassId);var ce=le;const ne=new i.a;ne.prefix("/api/client/classManage"),ne.get("/getAssignerClassList",de.getAssignerList),ne.get("/getUserClassList",de.getUserClassList),ne.post("/addClass",de.insertByUser);var ue=ne;var ge=new class{async getList({bookName:e="",ISBN:t="",status:s="",toggle:a=""}){const o=c.a.pickBy({bookName:e,ISBN:t,status:s,toggle:"1"===a?"1":"0"===a?"0":""},c.a.identity);try{return{code:0,data:await d.b.findAll({where:o,raw:!0})}}catch(e){return console.log("MethodError: <BookModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({bookName:e="",ISBN:t="",status:s="",toggle:a=""}){if(!c.a.isEmpty(c.a.omitBy({bookName:e,ISBN:t,status:["1","2","3"].includes(s.toString())?s:"",toggle:a},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.b.create({bookName:e,ISBN:t,status:s,toggle:"1"===a.toString()?"1":"0"}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <BookModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.b.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <BookModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",bookName:t="",ISBN:s="",status:a="",toggle:o=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,bookName:t,ISBN:s,status:["1","2","3"].includes(a.toString())?a:"",toggle:o},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.b.update({bookName:t,ISBN:s,status:a,toggle:"1"===o.toString()?"1":"0"},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <BookModel.update>"),{code:9999,message:"系统内部错误"}}}async getUserBook(){try{return{code:0,data:await d.b.findAll({where:{toggle:1,status:2},attributes:["id","bookName","ISBN"]})}}catch(e){console.log(e)}}async getQuoteInfo(){try{const e=await d.c.findAll({raw:!0,attributes:["bookIds"]}),t=e.length>0?c.a.uniq(e.map(e=>e.bookIds).join(",").split(",")):[];return{code:0,data:await Promise.all(t.map(async e=>{const t=await d.i.findAll({raw:!0,order:["status"],where:{bookId:e},attributes:["status"]});return{id:e,...await d.b.findOne({raw:!0,where:{id:e},attributes:["bookName","ISBN"]}),status:t.length>0?t[0].status:0}}))}}catch(e){console.log(e)}}};const ye=g.a.Op;var me=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);if([1,2,3].includes(t)){const{bookName:t="",ISBN:s="",status:a,toggle:o}=e.query;e.body=await ge.getList({bookName:{[ye.like]:`%${t}%`},ISBN:{[ye.like]:`%${s}%`},status:a,toggle:o})}else e.body={code:9999,message:"你无权进行此操作"}}async add(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{bookName:t,ISBN:s,status:a,toggle:o}=e.request.body;e.body=await ge.insert({bookName:t,ISBN:s,status:a,toggle:o})}else e.body={code:9999,message:"你无权进行此操作"}}async delete(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params;e.body=await ge.deleteById({id:t})}else e.body={code:9999,message:"你无权进行此操作"}}async update(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params,{bookName:s,ISBN:a,status:o,toggle:r}=e.request.body;e.body=await ge.update({id:t,bookName:s,ISBN:a,status:o,toggle:r})}else e.body={code:9999,message:"你无权进行此操作"}}async getUserBook(e){e.body=await ge.getUserBook()}async applyBook(e){const{_auth:t}=m()(e.header.authorization);if([3].includes(t)){const{bookName:t,ISBN:s}=e.request.body;e.body=await ge.insert({bookName:t,ISBN:s,status:"1",toggle:"0"})}else e.body={code:9999,message:"你无权进行此操作"}}async getBookQuoteList(e){e.body=await ge.getQuoteInfo()}};const pe=new i.a;pe.prefix("/api/sys/book"),pe.get("/getList",me.getList),pe.get("/getBookQuoteList",me.getBookQuoteList),pe.post("/add",me.add),pe.post("/delete/:id",me.delete),pe.post("/update/:id",me.update);var be=pe;const Ie=new i.a;Ie.prefix("/api/client/book"),Ie.get("/getUserBook",me.getUserBook),Ie.post("/applyBook",me.applyBook);var he=Ie;var we=new class{async getList({userId:e="",collegeId:t="",courseName:s="",courseTime:a="",collegeIds:o="",sessions:r=""}){const i=c.a.pickBy({userId:e,collegeId:t,courseName:s,courseTime:a,collegeIds:o,sessions:r},c.a.identity);try{return{code:0,data:await d.Course.findAll({where:i,include:[{model:d.q,attributes:[],as:"user"},{model:d.f,attributes:[],as:"college"}],raw:!0,attributes:["id","userId","collegeId","courseName","courseTime","collegeIds","sessions",g.a.col("user.account"),g.a.col("user.realName"),g.a.col("user.phoneNumber"),g.a.col("college.collegeName")]})}}catch(e){return console.log("MethodError: <CourseModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({userId:e="",collegeId:t="",courseName:s="",courseTime:a="",collegeIds:o="",sessions:r=""}){if(!c.a.isEmpty(c.a.omitBy({userId:e,collegeId:t,courseName:s,courseTime:a,collegeIds:o,sessions:r},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.Course.create({userId:e,collegeId:t,courseName:s,courseTime:a,collegeIds:o,sessions:r}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <CourseModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.Course.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <CourseModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",userId:t="",collegeId:s="",courseName:a="",courseTime:o="",collegeIds:r="",sessions:i=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,userId:t,collegeId:s,courseName:a,courseTime:o,collegeIds:r,sessions:i},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.Course.update({userId:t,collegeId:s,courseName:a,courseTime:o,collegeIds:r,sessions:i},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <CourseModel.update>"),{code:9999,message:"系统内部错误"}}}},Ne=s(5);var fe=new class{async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.CourseBook.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <CourseBookModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async getCourseBookByCourseId({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return{code:0,data:await d.CourseBook.findAll({where:{courseId:e},include:[{model:d.b,attributes:[],as:"book"}],raw:!0,attributes:["id","courseId","bookId","status",g.a.col("book.bookName"),g.a.col("book.ISBN"),g.a.col("book.toggle")]})}}catch(e){return console.log("MethodError: <CourseBookModel.getList>"),{code:9999,message:"系统内部错误"}}}async updateCourseBookByCourseId({id:e="",courseBookList:t=[]}){const s=t.some(e=>!c.a.isEmpty(c.a.omitBy({bookId:e.bookId,status:e.status},c.a.identity))),a=!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity));return s||a?{code:9999,message:"参数不能为空"}:Ne.a.transaction({},s=>d.CourseBook.destroy({where:{courseId:e}},{transaction:s}).then(s=>d.CourseBook.bulkCreate(t.map(t=>({...t,courseId:e}))))).then(()=>({code:0,message:"更新成功"})).catch(e=>(console.log("TransactionError: <CourseBookModel.updateCourseBookByCourseId>"),{code:9999,message:"系统内部错误"}))}};const ke=g.a.Op;var Be=new class{constructor(e){}async getList(e){const{userId:t,collegeId:s,courseName:a="",courseTime:o="",collegeIds:r="",sessions:i=""}=e.query;e.body=await we.getList({userId:t,collegeId:s,courseName:{[ke.like]:`%${a}%`},courseTime:{[ke.like]:`%${o}%`},collegeIds:{[ke.like]:`%${r}%`},sessions:{[ke.like]:`%${i}%`}})}async add(e){const{userId:t,collegeId:s,courseName:a,courseTime:o,collegeIds:r,sessions:i}=e.request.body;e.body=await we.insert({userId:t,collegeId:s,courseName:a,courseTime:o,collegeIds:r,sessions:i})}async delete(e){const{id:t}=e.params;e.body=await we.deleteById({id:t})}async update(e){const{id:t}=e.params,{collegeId:s,userId:a,courseName:o,courseTime:r,collegeIds:i,sessions:d}=e.request.body;e.body=await we.update({id:t,collegeId:s,userId:a,courseName:o,courseTime:r,collegeIds:i,sessions:d})}async getDetailList(e){const{id:t}=e.params;e.body=await fe.getCourseBookByCourseId({id:t})}async updateDetail(e){const{id:t}=e.params,{courseBookList:s=[]}=e.request.body;e.body=await fe.updateCourseBookByCourseId({id:t,courseBookList:s})}async deleteDetail(e){const{id:t}=e.params;e.body=await fe.deleteById({id:t})}};const Le=new i.a;Le.prefix("/api/sys/course"),Le.get("/getList",Be.getList),Le.post("/add",Be.add),Le.post("/delete/:id",Be.delete),Le.post("/update/:id",Be.update),Le.get("/detail/getList/:id",Be.getDetailList),Le.post("/detail/update/:id",Be.updateDetail),Le.get("/detail/delete/:id",Be.deleteDetail);const Ee=new i.a;Ee.prefix("/api/client/course"),Ee.get("/getList",Be.getList),Ee.post("/add",Be.add),Ee.post("/delete/:id",Be.delete),Ee.post("/update/:id",Be.update),Ee.get("/detail/getList/:id",Be.getDetailList),Ee.post("/detail/update/:id",Be.updateDetail),Ee.get("/detail/delete/:id",Be.deleteDetail);var Me=new class{async getList({sellerName:e="",source:t="",phoneNumber:s="",email:a="",address:o="",toggle:r=""}){const i=c.a.pickBy({sellerName:e,source:t,phoneNumber:s,email:a,address:o,toggle:"1"===r?"1":"0"===r?"0":""},c.a.identity);try{return{code:0,data:await d.l.findAll({where:i,raw:!0,include:[{model:d.j,attributes:[],as:"role"}],attributes:["id","sellerName","phoneNumber",g.a.col("role.roleName"),"source","email","address","toggle"]})}}catch(e){return console.log("MethodError: <SellerModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({sellerName:e="",source:t="",phoneNumber:s="",email:a="",password:o="",address:r="",toggle:i=""}){if(!c.a.isEmpty(c.a.omitBy({sellerName:e,source:t,phoneNumber:s,email:a,address:r,toggle:i,password:o},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.l.create({sellerName:e,source:t,phoneNumber:s,email:a,address:r,toggle:i,password:o,roleId:5}),{code:0,message:"添加成功"}}catch(e){return console.log("MethodError: <SellerModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.l.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <SellerModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",sellerName:t="",source:s="",phoneNumber:a="",email:o="",address:r="",toggle:i="",password:l=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,sellerName:t,source:s,phoneNumber:a,email:o,address:r,toggle:i,password:l},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.l.update({id:e,sellerName:t,source:s,phoneNumber:a,email:o,address:r,toggle:i,password:l,roleId:5},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <SellerModel.update>"),{code:9999,message:"系统内部错误"}}}async getSelectList(){try{return{code:0,data:await d.l.findAll({raw:!0,where:{toggle:1},attributes:["id","source","phoneNumber","sellerName"]})}}catch(e){console.log(e)}}};const qe=g.a.Op;var Se=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{sellerName:t="",source:s="",phoneNumber:a="",email:o="",address:r="",toggle:i}=e.query;e.body=await Me.getList({sellerName:{[qe.like]:`%${t}%`},source:{[qe.like]:`%${s}%`},phoneNumber:{[qe.like]:`%${a}%`},email:{[qe.like]:`%${o}%`},address:{[qe.like]:`%${r}%`},toggle:i})}}async add(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{sellerName:t,source:s,phoneNumber:a,email:o,address:r,password:i,toggle:d}=e.request.body;e.body=await Me.insert({sellerName:t,source:s,phoneNumber:a,email:o,address:r,toggle:d,password:i})}}async delete(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params;e.body=await Me.deleteById({id:t})}}async update(e){const{_auth:t}=m()(e.header.authorization);if(1!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params,{sellerName:s,source:a,phoneNumber:o,email:r,address:i,toggle:d,password:l}=e.request.body;e.body=await Me.update({id:t,sellerName:s,source:a,phoneNumber:o,email:r,address:i,toggle:d,password:l})}}async getSelectList(e){const{_auth:t}=m()(e.header.authorization);[1,2].includes(t)?e.body=await Me.getSelectList():e.body={code:9999,message:"你无权进行此操作"}}};const _e=new i.a;_e.prefix("/api/sys/seller"),_e.get("/getList",Se.getList),_e.get("/getSelectList",Se.getSelectList),_e.post("/add",Se.add),_e.post("/delete/:id",Se.delete),_e.post("/update/:id",Se.update);var Te=_e;const Ae=new i.a;Ae.prefix("/api/client/seller"),Ae.get("/getList",Se.getList),Ae.post("/add",Se.add),Ae.post("/delete/:id",Se.delete),Ae.post("/update/:id",Se.update);var ve=Ae;s(30),s(14);const ze=g.a.Op;var Ce=new class{async getList({account:e="",realName:t="",bookName:s="",ISBN:a="",className:o="",session:r="",collegeName:i=""}){const l=c.a.pickBy({realName:t,account:e},c.a.identity),n=c.a.pickBy({bookName:s,ISBN:a},c.a.identity);try{const e=await d.r.findAll({raw:!0,where:{isPay:1},include:[{model:d.q,attributes:[],as:"user",where:l},{model:d.b,attributes:[],as:"book",where:n}],attributes:["id","userId","bookId",g.a.col("user.realName"),g.a.col("user.account"),g.a.col("user.phoneNumber"),g.a.col("book.bookName"),g.a.col("book.ISBN")]});return{code:0,data:(await Promise.all(e.map(async e=>{const t={...e,...await re.getInfoByUserId({userId:e.userId,className:{[ze.like]:`%${o}%`},session:{[ze.like]:`%${r}%`},collegeName:{[ze.like]:`%${i}%`}})};return t.className&&t.session&&t.collegeName?t:""}))).filter(e=>e)}}catch(e){return{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.r.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <UserBookModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async getBookListByUserId({userId:e}){if(!c.a.isEmpty(c.a.omitBy({userId:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return{code:0,data:await d.r.findAll({where:{userId:e},raw:!0,include:[{model:d.b,attributes:[],as:"book"},{model:d.o,attributes:[],as:"subscription"}],attributes:["id","isPay",[g.a.col("book.id"),"bookId"],g.a.col("book.bookName"),g.a.col("book.ISBN"),g.a.col("book.status"),"subscriptionId",g.a.col("subscription.subscriptionName")]})}}catch(e){console.log(e)}}async updateUserBookByUserId({id:e="",userBookList:t=[]}){const s=t.some(e=>!c.a.isEmpty(c.a.omitBy({bookId:e.bookId.toString(),isPay:e.isPay.toString()},c.a.identity))),a=!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity));return s||a?{code:9999,message:"参数不能为空"}:Ne.a.transaction({},s=>d.r.destroy({where:{userId:e}},{transaction:s}).then(s=>d.r.bulkCreate(t.map(t=>({...t,userId:e}))))).then(()=>({code:0,message:"更新成功"})).catch(e=>(console.log("TransactionError: <UserBookModel.updateUserBookByCourseId>"),{code:9999,message:"系统内部错误"}))}async getUserBookList({userId:e}){if(!c.a.isEmpty(c.a.omitBy({userId:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return{code:0,data:await d.r.findAll({raw:!0,where:{userId:e},attributes:["id","userId","bookId","isPay","subscriptionId"]})}}catch(e){console.log(e)}}async handleUserBook({userId:e="",bookId:t="",isPay:s="",subscriptionId:a=""}){if(!c.a.isEmpty(c.a.omitBy({userId:e,bookId:t,isPay:s,subscriptionId:a},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return console.log(e),await d.r.findOne({raw:!0,where:{bookId:t,userId:e,subscriptionId:a}})?await d.r.update({isPay:s},{where:{bookId:t,userId:e,subscriptionId:a}}):await d.r.create({userId:e,bookId:t,isPay:s,subscriptionId:a}),{code:0,message:"操作成功"}}catch(e){console.log(e)}}async getUserBook({userId:e=""}){try{const t=await d.r.findAll({raw:!0,where:{userId:e,isPay:1},include:[{model:d.o,attributes:[],as:"subscription"},{model:d.b,attributes:[],as:"book"}],attributes:["id","bookId",g.a.col("book.bookName"),g.a.col("book.ISBN"),"subscriptionId",g.a.col("subscription.subscriptionName"),g.a.col("subscription.status")]});return{code:0,data:await Promise.all(t.map(async e=>{const t=await d.i.findOne({raw:!0,where:{subscriptionId:e.subscriptionId,status:2},include:[{model:d.l,attributes:[],as:"seller"}],attributes:["sellerId","price",g.a.col("seller.sellerName"),g.a.col("seller.source")]});return{...e,...t}}))}}catch(e){console.log(e)}}};const Re=g.a.Op;var Ue=new class{constructor(e){}async getList(e){const{account:t="",realName:s="",bookName:a="",ISBN:o="",className:r="",session:i="",collegeName:d=""}=e.query;e.body=await Ce.getList({account:{[Re.like]:`%${t}%`},realName:{[Re.like]:`%${s}%`},bookName:{[Re.like]:`%${a}%`},ISBN:{[Re.like]:`%${o}%`},className:r,session:i,collegeName:d})}async add(e){}async delete(e){}async update(e){}async getBookListByUserId(e){const{userId:t}=e.params;e.body=await Ce.getBookListByUserId({userId:t})}async updateDetail(e){const{id:t}=e.params,{userBookList:s}=e.request.body;e.body=await Ce.updateUserBookByUserId({id:t,userBookList:s})}async getUserBookList(e){const{_uid:t}=m()(e.header.authorization);e.body=await Ce.getUserBookList({userId:t})}async handleUserBook(e){const{_auth:t,_uid:s}=m()(e.header.authorization);if(4!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{bookId:t,isPay:a,subscriptionId:o}=e.request.body;e.body=await Ce.handleUserBook({userId:s,bookId:t,isPay:a,subscriptionId:o})}}async getUserBook(e){const{_auth:t,_uid:s}=m()(e.header.authorization);e.body=4!==t?{code:9999,message:"你无权进行此操作"}:await Ce.getUserBook({userId:s})}};const xe=new i.a;xe.prefix("/api/sys/userBook"),xe.get("/getList",Ue.getList),xe.post("/add",Ue.add),xe.post("/delete/:id",Ue.delete),xe.post("/update/:id",Ue.update),xe.get("/getBookListByUserId/:userId",Ue.getBookListByUserId),xe.post("/updateDetail/:id",Ue.updateDetail);var Oe=xe;const Ge=new i.a;Ge.prefix("/api/client/userBook"),Ge.get("/getList",Ue.getUserBookList),Ge.post("/handle",Ue.handleUserBook),Ge.get("/getUserBook",Ue.getUserBook);var $e=Ge,Pe=s(6);const Ke=g.a.Op;var je=new class{constructor(){}async getList(e){const{_auth:t}=m()(e.header.authorization);if([1,2,3].includes(t)){const{bookIds:t="",bookListName:s="",toggle:a,collegeId:o,classIds:r="",startTime:i="",endTime:d=""}=e.query;e.body=await Pe.a.getList({bookListName:{[Ke.like]:`%${s}%`},bookIds:{[Ke.like]:`%${t}%`},classIds:{[Ke.like]:`%${r}%`},toggle:a,startTime:i,endTime:d,collegeId:o})}else e.body={code:9999,message:"你无权进行此操作"}}async add(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{bookIds:t,bookListName:s,classIds:a,toggle:o,subscriptionId:r,collegeId:i}=e.request.body;e.body=await Pe.a.insert({bookIds:t,classIds:a,toggle:o,bookListName:s,subscriptionId:r,collegeId:i})}else e.body={code:9999,message:"你无权进行此操作"}}async delete(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params;e.body=await Pe.a.deleteById({id:t})}else e.body={code:9999,message:"你无权进行此操作"}}async update(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params,{bookIds:s,classIds:a,bookListName:o,subscriptionId:r,toggle:i,collegeId:d}=e.request.body;e.body=await Pe.a.update({id:t,bookListName:o,bookIds:s,toggle:i,classIds:a,subscriptionId:r,collegeId:d})}else e.body={code:9999,message:"你无权进行此操作"}}async getBookListInfo(e){const{_auth:t,_uid:s}=m()(e.header.authorization);if(4!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{status:t}=e.query;e.body=await Pe.a.getBookListInfo({id:s,status:t})}}async edit(e){const{_auth:t}=m()(e.header.authorization);if([1,2,3].includes(t)){const{id:t}=e.params,{classIds:s,bookIds:a}=e.request.body;e.body=await Pe.a.edit({id:t,classIds:s,bookIds:a})}else e.body={code:9999,message:"你无权进行此操作"}}async getToSubList(e){const{_auth:t,_uid:s}=m()(e.header.authorization);e.body=5!==t?{code:9999,message:"你无权进行此操作"}:await Pe.a.getToSubList({id:s})}async getAssignerBookList(e){const{_auth:t,_uid:s}=m()(e.header.authorization);e.body=6!==t?{code:9999,message:"你无权进行此操作"}:await Pe.a.getAssignerBookList({assignId:s})}async getAssignerBookListWithClass(e){const{_auth:t,_uid:s}=m()(e.header.authorization);e.body=6!==t?{code:9999,message:"你无权进行此操作"}:await Pe.a.getAssignerBookListWithClass({assignId:s})}};const De=new i.a;De.prefix("/api/sys/bookList"),De.get("/getList",je.getList),De.post("/add",je.add),De.post("/delete/:id",je.delete),De.post("/update/:id",je.update);var Qe=De;const We=new i.a;We.prefix("/api/client/bookList"),We.get("/getUserBookList",je.getBookListInfo),We.get("/getAssignerBookListWithClass",je.getAssignerBookListWithClass),We.post("/edit/:id",je.edit),We.get("/getToSubList",je.getToSubList),We.get("/getAssignerBookList",je.getAssignerBookList);var Fe=We;g.a.Op;var He=new class{async getList({bookId:e="",sellerId:t="",price:s="",status:a="",subscriptionId:o=""}){const r=c.a.pickBy({bookId:e,sellerId:t,price:s,status:a,subscriptionId:o},c.a.identity);try{return{code:0,data:await d.i.findAll({raw:!0,where:r,include:[{model:d.l,attributes:[],as:"seller"},{model:d.b,where:{toggle:1,status:2},attributes:[],as:"book"},{model:d.o,attributes:[],as:"subscription"}],attributes:["id","price","time","status",[g.a.col("subscription.id"),"subscriptionId"],g.a.col("subscription.subscriptionName"),[g.a.col("book.id"),"bookId"],g.a.col("book.bookName"),g.a.col("book.ISBN"),[g.a.col("seller.id"),"sellerId"],g.a.col("seller.sellerName"),g.a.col("seller.source"),g.a.col("seller.phoneNumber"),g.a.col("seller.email")]})}}catch(e){console.log(e)}}async insert({bookId:e="",sellerId:t="",price:s="",status:a="",subscriptionId:o=""}){if(!c.a.isEmpty(c.a.omitBy({bookId:e,sellerId:t,price:s,status:a,subscriptionId:o},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.i.create({bookId:e,sellerId:t,time:Date.now(),price:s,status:a,subscriptionId:o}),{code:0,message:"添加成功"}}catch(e){console.log(e)}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.i.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <QuoteModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",bookId:t="",sellerId:s="",price:a="",status:o=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,bookId:t,sellerId:s,price:a,status:o},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.i.update({bookId:t,sellerId:s,time:Date.now(),price:a,status:o},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <QuoteModel.update>"),{code:9999,message:"系统内部错误"}}}async sub({sellerId:e="",bookId:t="",subscriptionId:s=""}){if(!c.a.isEmpty(c.a.omitBy({sellerId:e,bookId:t,subscriptionId:s},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.i.update({status:"3"},{where:{bookId:t,subscriptionId:s}}),await d.i.update({status:"2"},{where:{bookId:t,sellerId:e,subscriptionId:s}}),{code:0,message:"征订成功"}}catch(e){return console.log("MethodError: <QuoteModel.update>"),{code:9999,message:"系统内部错误"}}}async getQuotedList({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{const t=await d.i.findAll({raw:!0,where:{sellerId:e,status:2},include:[{model:d.b,attributes:[],as:"book"},{model:d.o,attributes:[],as:"subscription"}],attributes:["id","bookId",g.a.col("book.bookName"),g.a.col("book.ISBN"),[g.a.col("subscription.id"),"subscriptionId"],g.a.col("subscription.subscriptionName"),"time",[g.a.col("subscription.status"),"bookListStatus"],"price"]});return{code:0,data:await Promise.all(t.map(async e=>{const t=await d.r.findAndCountAll({raw:!0,where:{bookId:e.bookId,isPay:1,subscriptionId:e.subscriptionId},include:[{model:d.o,attributes:[],as:"subscription"}]});return{...e,count:t.count}}))}}catch(e){console.log(e)}}async cancelQuote({sellerId:e,id:t}){try{const s=await d.i.findOne({raw:!0,where:{id:t},attributes:["subscriptionId","bookId"]});return await d.i.destroy({where:{id:t,sellerId:e,status:2}}),await d.i.update({status:1},{where:{...s}}),{code:0,message:"操作成功"}}catch(e){console.log(e)}}async updateQuote({sellerId:e="",bookId:t="",price:s="",subscriptionId:a}){try{return await d.i.update({price:s},{where:{sellerId:e,bookId:t,subscriptionId:a}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <BookModel.update>"),{code:9999,message:"系统内部错误"}}}};const Je=g.a.Op;var Ve=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{bookId:t,sellerId:s,price:a="",status:o="",subscriptionId:r=""}=e.query;e.body=await He.getList({bookId:t,sellerId:s,price:{[Je.like]:`%${a}%`},status:o,subscriptionId:r})}else e.body={code:9999,message:"你无权进行此操作"}}async add(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{bookId:t,sellerId:s,price:a="",status:o=""}=e.request.body;e.body=await He.insert({bookId:t,sellerId:s,price:a,status:o})}else e.body={code:9999,message:"你无权进行此操作"}}async delete(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params;e.body=await He.deleteById({id:t})}else e.body={code:9999,message:"你无权进行此操作"}}async update(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params,{bookId:s,sellerId:a,price:o="",status:r=""}=e.request.body;e.body=await He.update({id:t,bookId:s,sellerId:a,price:o,status:r})}else e.body={code:9999,message:"你无权进行此操作"}}async addQuote(e){const{_auth:t,_uid:s}=m()(e.header.authorization),{id:a,price:o="",subscriptionId:r}=e.request.body;e.body=5!==t?{code:9999,message:"你无权进行此操作"}:await He.insert({sellerId:s,bookId:a,price:o,status:1,subscriptionId:r})}async updateQuote(e){const{_auth:t,_uid:s}=m()(e.header.authorization);if(5!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.params,{price:a="",subscriptionId:o}=e.request.body;e.body=await He.updateQuote({sellerId:s,bookId:t,price:a,subscriptionId:o})}}async getQuotedList(e){const{_auth:t,_uid:s}=m()(e.header.authorization);e.body=5!==t?{code:9999,message:"你无权进行此操作"}:await He.getQuotedList({id:s})}async cancel(e){const{_auth:t,_uid:s}=m()(e.header.authorization),{id:a}=e.request.body;e.body=5!==t?{code:9999,message:"你无权进行此操作"}:await He.cancelQuote({sellerId:s,id:a})}async sub(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{bookId:t,sellerId:s,subscriptionId:a}=e.request.body;e.body=await He.sub({sellerId:s,bookId:t,subscriptionId:a})}else e.body={code:9999,message:"你无权进行此操作"}}};const Xe=new i.a;Xe.prefix("/api/sys/quote"),Xe.get("/getList",Ve.getList),Xe.post("/add",Ve.add),Xe.post("/delete/:id",Ve.delete),Xe.post("/update/:id",Ve.update),Xe.post("/sub",Ve.sub);var Ye=Xe;const Ze=new i.a;Ze.prefix("/api/client/quote"),Ze.get("/getList",Ve.getQuotedList),Ze.post("/update/:id",Ve.updateQuote),Ze.post("/add",Ve.addQuote),Ze.post("/cancel",Ve.cancel);var et=Ze;var tt=new class{async getList({className:e,assignName:t,userName:s}){const a=c.a.pickBy({realName:s},c.a.identity),o=c.a.pickBy({className:e},c.a.identity),r=c.a.pickBy({realName:t},c.a.identity);try{return{code:0,data:await d.q.findAll({raw:!0,where:a,include:[{model:d.a,attributes:[],right:!0,include:[{model:d.q,attributes:[],as:"user",where:r},{model:d.e,attributes:[],as:"class",where:o,include:{model:d.f,attributes:[],as:"college"}}]}],attributes:[g.a.col("assigns.id"),"account","realName","phoneNumber",g.a.col("assigns.classId"),g.a.col("assigns.class.className"),g.a.col("assigns.class.college.collegeName"),g.a.col("assigns.class.session"),g.a.col("assigns.status"),g.a.col("assigns.assignId"),g.a.col("assigns.userId"),[g.a.col("assigns.user.account"),"assignAccount"],[g.a.col("assigns.user.realName"),"assignRealName"],[g.a.col("assigns.user.phoneNumber"),"assignPhoneNumber"]]})}}catch(e){return console.log("MethodError: <AssignModel.getList>"),{code:9999,message:"系统内部错误"}}}async insert({userId:e="",classId:t="",status:s="",assignId:a=""}){if(!c.a.isEmpty(c.a.omitBy({userId:e,classId:t,status:s,assignId:a},c.a.identity)))return{code:9999,message:"参数不能为空"};try{await d.a.create({userId:e,classId:t,status:s,assignId:a})}catch(e){return console.log("MethodError: <AssignModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.a.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <AssignModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",userId:t="",classId:s="",status:a="",assignId:o=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,userId:t,classId:s,status:a,assignId:o},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.a.update({userId:t,classId:s,status:a,assignId:o},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <AssignModel.update>"),{code:9999,message:"系统内部错误"}}}};const st=g.a.Op;var at=new class{constructor(){}async getList(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{className:t="",assignName:s="",userName:a=""}=e.query;e.body=await tt.getList({className:{[st.like]:`%${t}%`},assignName:{[st.like]:`%${s}%`},userName:{[st.like]:`%${a}%`}})}else e.body={code:9999,message:"你无权进行此操作"}}async add(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{userId:t,classId:s,status:a,assignId:o}=e.request.body;e.body=await tt.insert({userId:t,classId:s,status:a,assignId:o})}else e.body={code:9999,message:"你无权进行此操作"}}async delete(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params;e.body=await tt.deleteById({id:t})}else e.body={code:9999,message:"你无权进行此操作"}}async update(e){const{_auth:t}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params,{userId:s,classId:a,status:o,assignId:r}=e.request.body;e.body=await tt.update({id:t,userId:s,classId:a,status:o,assignId:r})}else e.body={code:9999,message:"你无权进行此操作"}}};const ot=new i.a;ot.prefix("/api/sys/assign"),ot.get("/getList",at.getList),ot.post("/add",at.add),ot.post("/delete/:id",at.delete),ot.post("/update/:id",at.update);var rt=ot;var it=new class{async getList({subscriptionName:e="",status:t=""}){let s=c.a.pickBy({subscriptionName:e,status:t},c.a.identity);try{return{code:0,data:await d.o.findAll({raw:!0,where:s})}}catch(e){}}async getListByAssigner({assignId:e=""}){try{const t=await d.a.findAll({raw:!0,where:{assignId:e,status:1},attributes:["classId"]}),s=[...new Set(t.map(e=>e.classId))],a=(await d.c.findAll({raw:!0,where:{toggle:1},attributes:["classIds","subscriptionId"]})).filter(e=>e.classIds.split(",").some(e=>s.includes(parseInt(e,10))));return{code:0,data:await Promise.all(a.map(async e=>await d.o.findOne({raw:!0,where:{id:e.subscriptionId}})))}}catch(e){console.log(e)}}async insert({subscriptionName:e="",status:t=""}){if(!c.a.isEmpty(c.a.omitBy({subscriptionName:e,status:t},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.o.create({subscriptionName:e,status:t}),{code:0,message:"添加成功"}}catch(e){}}async delete({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.o.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <BookListModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async update({id:e="",subscriptionName:t="",status:s=""}){if(!c.a.isEmpty(c.a.omitBy({id:e,subscriptionName:t,status:s},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.o.update({subscriptionName:t,status:s},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <BookListModel.update>"),{code:9999,message:"系统内部错误"}}}};const dt=g.a.Op;var lt=new class{constructor(e){}async getList(e){const{_auth:t}=m()(e.header.authorization);if([1,2,3].includes(t)){const{subscriptionName:t="",status:s}=e.query;e.body=await it.getList({subscriptionName:{[dt.like]:`%${t}%`},status:s})}else e.body={code:9999,message:"你无权进行此操作"}}async getListByAssigner(e){const{_auth:t,_uid:s}=m()(e.header.authorization);e.body=6!==t?{code:9999,message:"你无权进行此操作"}:await it.getListByAssigner({assignId:s})}async add(e){const{_auth:t,_uid:s}=m()(e.header.authorization);if([1,2].includes(t)){const{subscriptionName:t="",status:s}=e.request.body;e.body=await it.insert({subscriptionName:t,status:s})}else e.body={code:9999,message:"你无权进行此操作"}}async delete(e){const{_auth:t,_uid:s}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params;e.body=await it.delete({id:t})}else e.body={code:9999,message:"你无权进行此操作"}}async update(e){const{_auth:t,_uid:s}=m()(e.header.authorization);if([1,2].includes(t)){const{id:t}=e.params,{subscriptionName:s,status:a}=e.request.body;e.body=await it.update({id:t,subscriptionName:s,status:a})}else e.body={code:9999,message:"你无权进行此操作"}}};const ct=new i.a;ct.prefix("/api/sys/subscription"),ct.get("/getList",lt.getList),ct.post("/add",lt.add),ct.post("/delete/:id",lt.delete),ct.post("/update/:id",lt.update);var nt=ct;const ut=new i.a;ut.prefix("/api/client/subscription"),ut.get("/getList",lt.getListByAssigner);var gt=ut;const{Op:yt}=g.a;var mt=new class{async getList(){try{const e=await d.m.findAll({raw:!0,include:[{model:d.i,attributes:[],include:[{model:d.b,attributes:[],as:"book"},{model:d.l,attributes:[],as:"seller"}],as:"quote"}],attributes:["id","quoteId","time","status",g.a.col("quote.price"),g.a.col("quote.bookId"),g.a.col("quote.book.bookName"),g.a.col("quote.book.ISBN"),g.a.col("quote.sellerId"),g.a.col("quote.seller.sellerName"),g.a.col("quote.seller.source"),g.a.col("quote.seller.email"),g.a.col("quote.seller.phoneNumber"),g.a.col("quote.seller.address")]});return{code:0,data:await Promise.all(e.map(async e=>{const t=await d.r.findAndCountAll({raw:!0,where:{bookId:e.bookId,isPay:1},include:[{model:d.o,attributes:[],where:{status:{[yt.between]:[4,5]}},as:"subscription"}]});return{...e,count:t.count}}))}}catch(e){console.log(e)}}async getListById({sellerId:e=""}){try{const t=await d.m.findAll({raw:!0,include:[{model:d.i,attributes:[],where:{sellerId:e},include:[{model:d.b,attributes:[],as:"book"},{model:d.l,attributes:[],as:"seller"}],as:"quote"}],attributes:["id","quoteId","time","status",g.a.col("quote.price"),g.a.col("quote.bookId"),g.a.col("quote.book.bookName"),g.a.col("quote.book.ISBN"),g.a.col("quote.sellerId"),g.a.col("quote.seller.sellerName"),g.a.col("quote.seller.source"),g.a.col("quote.seller.email"),g.a.col("quote.seller.phoneNumber"),g.a.col("quote.seller.address")]});return{code:0,data:await Promise.all(t.map(async e=>{const t=await d.r.findAndCountAll({raw:!0,where:{bookId:e.bookId,isPay:1},include:[{model:d.o,attributes:[],where:{status:4},as:"subscription"}]});return{...e,count:t.count}}))}}catch(e){console.log(e)}}async getListByUser({userId:e=""}){try{const t=await d.r.findAll({raw:!0,where:{userId:e,isPay:1},include:[{model:d.o,where:{status:{[yt.between]:[4,5]}},attributes:[],as:"subscription"},{model:d.b,attributes:[],as:"book"}],attributes:["id","userId","bookId","isPay","subscriptionId",g.a.col("subscription.subscriptionName"),[g.a.col("subscription.status"),"subscriptionStatus"],g.a.col("book.bookName"),g.a.col("book.ISBN")]}),s=await Promise.all(t.map(async e=>{const t=await d.i.findOne({raw:!0,where:{bookId:e.bookId,subscriptionId:e.subscriptionId,status:2},include:[{model:d.l,attributes:[],as:"seller"}],attributes:[["id","quoteId"],"price",[g.a.col("seller.id"),"sellerId"],g.a.col("seller.sellerName"),g.a.col("seller.address"),g.a.col("seller.phoneNumber"),g.a.col("seller.source"),g.a.col("seller.email")]});return{...e,...t}}));return{code:0,data:await Promise.all(s.map(async e=>{const t=await d.m.findOne({raw:!0,where:{quoteId:e.quoteId},attributes:["time","status"]});return{...e,...t}}))}}catch(e){console.log(e)}}async insert({quoteId:e="",time:t="",status:s=""}){if(!c.a.isEmpty(c.a.omitBy({quoteId:e,time:t,status:s},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.m.findOne({raw:!0,where:{quoteId:e}})?{code:0,message:"订单已存在"}:(await d.m.create({quoteId:e,time:t,status:s}),{code:0,message:"发货成功"})}catch(e){return console.log("MethodError: <ClassModel.insert>"),{code:9999,message:"系统内部错误"}}}async deleteById({id:e=""}){if(!c.a.isEmpty(c.a.omitBy({id:e},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.m.destroy({where:{id:e}}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <ClassModel.deleteById>"),{code:9999,message:"系统内部错误"}}}async deleteBySeller({sellerId:e="",id:t=""}){if(!c.a.isEmpty(c.a.omitBy({id:t},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.m.destroy({where:{id:t},include:[{model:d.i,where:{sellerId:e}}]}),{code:0,message:"删除成功"}}catch(e){return console.log("MethodError: <ClassModel.deleteById>"),console.log(e),{code:9999,message:"系统内部错误"}}}async update({id:e="",status:t=""}){if(!c.a.isEmpty(c.a.omitBy({status:t},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.m.update({status:t},{where:{id:e}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <ClassModel.update>"),{code:9999,message:"系统内部错误"}}}async updateBySellerId({sellerId:e="",id:t="",status:s=""}){if(!c.a.isEmpty(c.a.omitBy({sellerId:e,status:s},c.a.identity)))return{code:9999,message:"参数不能为空"};try{return await d.m.update({status:s},{where:{id:t},include:{model:d.i,where:{sellerId:e}}}),{code:0,message:"更新成功"}}catch(e){return console.log("MethodError: <ClassModel.update>"),console.log(e),{code:9999,message:"系统内部错误"}}}};var pt=new class{constructor(){}async getList(e){e.body=await mt.getList()}async add(e){const{quoteId:t,time:s,status:a}=e.request.body;e.body=await mt.insert({quoteId:t,time:s,status:a})}async delete(e){const{id:t}=e.params;e.body=await mt.deleteById({id:t})}async update(e){const{id:t}=e.params,{status:s}=e.request.body;e.body=await mt.update({id:t,status:s})}async addToOrder(e){const{_auth:t}=m()(e.header.authorization);if(5!==t)e.body={code:9999,message:"你无权进行此操作"};else{const{id:t}=e.request.body;e.body=await mt.insert({quoteId:t,time:new Date,status:"0"})}}async getListById(e){const{_auth:t,_uid:s}=m()(e.header.authorization);e.body=5!==t?{code:9999,message:"你无权进行此操作"}:await mt.getListById({sellerId:s})}async updateBySeller(e){const{_uid:t}=m()(e.header.authorization),{id:s}=e.params,{status:a}=e.request.body;e.bodu=await mt.updateBySellerId({sellerId:t,id:s,status:a})}async deleteBySeller(e){const{_uid:t,_auth:s}=m()(e.header.authorization);if(4!==s)e.body={code:9999,message:"你无权进行此操作"};else{const{id:s}=e.params;e.body=await mt.deleteBySeller({sellerId:t,id:s})}}async getListByUser(e){const{_uid:t,_auth:s}=m()(e.header.authorization);e.body=4!==s?{code:9999,message:"你无权进行此操作"}:await mt.getListByUser({userId:t})}};const bt=new i.a;bt.prefix("/api/sys/order"),bt.get("/getList",pt.getList),bt.post("/add",pt.add),bt.post("/delete/:id",pt.delete),bt.post("/update/:id",pt.update);var It=bt;const ht=new i.a;ht.prefix("/api/client/order"),ht.post("/addToOrder",pt.addToOrder),ht.post("/update/:id",pt.updateBySeller),ht.post("/delete/:id",pt.deleteBySeller),ht.get("/getList",pt.getListById),ht.get("/getUserList",pt.getListByUser);const wt=[h,L,S,R,D,J,te,ce,be,Te,Oe,Qe,rt,Ye,nt,It],Nt=[T,ae,ue,he,ve,$e,Fe,et,ht,gt];t.a=o()([...wt,...Nt])},function(e,t,s){"use strict";s.r(t),function(e){var t=s(18),a=s.n(t),o=s(7),r=s.n(o),i=s(19),d=s.n(i),l=s(20),c=s.n(l),n=s(21),u=s.n(n),g=s(22),y=s.n(g),m=s(23),p=s.n(m),b=s(24),I=s.n(b),h=s(25),w=s(31),N=s(14);const f=new a.a,k=d()(N.a).unless({path:[/^\/api\/public/]}),B=I()([p()(),c()(),y()(),u()(r.a.join(e,"../public")),h.a,k]);f.use(B),f.use(Object(w.a)()),f.listen(5e3)}.call(this,"src")}]);